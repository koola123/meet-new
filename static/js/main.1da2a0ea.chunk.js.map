{"version":3,"sources":["Event.js","EventList.js","CitySearch.js","NumberOfEvents.js","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","show","handleButton","setState","prevState","events","this","props","className","description","onClick","Component","EventList","map","event","id","CitySearch","query","suggestions","handleInputChanged","value","target","locations","filter","location","toUpperCase","indexOf","handleItemClicked","suggestion","updateEvents","type","onChange","NumberOfEvents","showEvent","errorText","e","mockData","JSON","parse","stringify","getEvents","a","extractLocations","Set","App","then","locationEvents","mounted","Boolean","window","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1da2a0ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Event extends Component {\n\n  state = {\n    show: false,\n  };\n\n  handleButton = () => {\n    this.setState((prevState) => ({ show: !prevState.show }));\n  };\n\n  render() {\n    let { events }  = this.props\n\n    return (\n      <div className=\"Event\">\n        <ul>\n\n          {this.state.show === true && (\n            <p className=\"EventDetails\">{events.description}</p>\n          )}\n          {this.state.show === false && (\n            <button className=\"showMore\" onClick={() => this.handleButton()}>\n              Show details\n            </button>\n          )}\n          {this.state.show === true && (\n            <button className=\"showLess\" onClick={() => this.handleButton()}>\n              hide details\n            </button>\n          )}\n\n        </ul>\n      </div>\n    );\n  }\n}\nexport default Event;\n","import React, { Component } from 'react'\nimport Event from './Event'\n\nclass EventList extends Component {\n  render() {\n  const { events } = this.props\n  return (\n    <ul className=\"EventList\">\n      {events.map(event =>\n        <li key={event.id}>\n          <Event events={event} />\n        </li>\n      )}\n    </ul>\n  );\n}\n}\n\nexport default EventList\n","import React, { Component } from 'react'\n\nclass CitySearch extends Component {\n  state = {\n    query: \"\",\n    suggestions: []\n  }\n\n  handleInputChanged = (event) => {\n  const value = event.target.value;\n  const suggestions = this.props.locations.filter((location) => {\n    return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n  })\n  this.setState({\n    query: value,\n    suggestions,\n  })\n}\n\n\nhandleItemClicked = (suggestion) => {\n  this.setState({\n    query: suggestion\n  });\n\n  this.props.updateEvents(suggestion);\n}\n\n  render() {\n    return(\n      <div className=\"CitySearch\">\n        <input\n        type=\"text\"\n        className=\"city\"\n        value={this.state.query}\n        onChange={this.handleInputChanged} />\n        <ul className=\"suggestions\">\n          {this.state.suggestions.map((suggestion) => {\n            return <li\n            key={suggestion}\n            onClick={() => this.handleItemClicked(suggestion)}\n            >{suggestion}</li>\n          })}\n          <li onClick={() => this.handleItemClicked(\"all\")}>\n            <b>See all cities</b>\n          </li>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default CitySearch\n","import React, { Component } from 'react'\n\nclass NumberOfEvents extends Component {\n  state = {\n    showEvent: 32,\n    errorText: \"\"\n  }\n\n  handleInputChanged = (e) => {\n    const value = e.target.value\n     this.setState({\n       showEvent: value,\n       errorText: \"\"\n     })\n   }\n\n  render() {\n    return (\n    <div className=\"NumberOfEvents\">\n      <p>Number of Events:</p>\n      <input\n      className=\"numberOfEvents\"\n      type=\"text\"\n      value={this.state.showEvent}\n      onChange={(e) => this.handleInputChanged(e)}\n      />\n    </div>\n    )\n  }\n}\n\nexport default NumberOfEvents\n","const mockData = [\n{\n \"kind\": \"calendar#event\",\n \"etag\": \"\\\"3181161784712000\\\"\",\n \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n \"status\": \"confirmed\",\n \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n \"created\": \"2020-05-19T19:17:46.000Z\",\n \"updated\": \"2020-05-27T12:01:32.356Z\",\n \"summary\": \"Learn JavaScript\",\n \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n \"location\": \"London, UK\",\n \"creator\": {\n  \"email\": \"fullstackwebdev@careerfoundry.com\",\n  \"self\": true\n },\n \"organizer\": {\n  \"email\": \"fullstackwebdev@careerfoundry.com\",\n  \"self\": true\n },\n \"start\": {\n  \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n  \"timeZone\": \"Europe/Berlin\"\n },\n \"end\": {\n  \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n  \"timeZone\": \"Europe/Berlin\"\n },\n \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n \"originalStartTime\": {\n  \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n  \"timeZone\": \"Europe/Berlin\"\n },\n \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n \"sequence\": 0,\n \"reminders\": {\n  \"useDefault\": true\n },\n \"eventType\": \"default\"\n},\n{\n \"kind\": \"calendar#event\",\n \"etag\": \"\\\"3181159875584000\\\"\",\n \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n \"status\": \"confirmed\",\n \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n \"created\": \"2020-05-19T19:14:30.000Z\",\n \"updated\": \"2020-05-27T11:45:37.792Z\",\n \"summary\": \"React is Fun\",\n \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n \"location\": \"Berlin, Germany\",\n \"creator\": {\n  \"email\": \"fullstackwebdev@careerfoundry.com\",\n  \"self\": true\n },\n \"organizer\": {\n  \"email\": \"fullstackwebdev@careerfoundry.com\",\n  \"self\": true\n },\n \"start\": {\n  \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n  \"timeZone\": \"Europe/Berlin\"\n },\n \"end\": {\n  \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n  \"timeZone\": \"Europe/Berlin\"\n },\n \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n \"originalStartTime\": {\n  \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n  \"timeZone\": \"Europe/Berlin\"\n },\n \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n \"sequence\": 0,\n \"reminders\": {\n  \"useDefault\": true\n },\n \"eventType\": \"default\"\n},\n{\n   \"kind\": \"calendar#event\",\n   \"etag\": \"\\\"3181161784712000\\\"\",\n   \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200521T140000Z\",\n   \"status\": \"confirmed\",\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MjFUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n   \"created\": \"2020-05-19T19:17:46.000Z\",\n   \"updated\": \"2020-05-27T12:01:32.356Z\",\n   \"summary\": \"Learn JavaScript\",\n   \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n   \"location\": \"London, UK\",\n   \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"start\": {\n    \"dateTime\": \"2020-05-21T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"end\": {\n    \"dateTime\": \"2020-05-21T17:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n   \"originalStartTime\": {\n    \"dateTime\": \"2020-05-21T16:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n   \"sequence\": 0,\n   \"reminders\": {\n    \"useDefault\": true\n   },\n   \"eventType\": \"default\"\n  },\n  {\n   \"kind\": \"calendar#event\",\n   \"etag\": \"\\\"3181159875584000\\\"\",\n   \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200522T120000Z\",\n   \"status\": \"confirmed\",\n   \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjJUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n   \"created\": \"2020-05-19T19:14:30.000Z\",\n   \"updated\": \"2020-05-27T11:45:37.792Z\",\n   \"summary\": \"React is Fun\",\n   \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n   \"location\": \"Berlin, Germany\",\n   \"creator\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"organizer\": {\n    \"email\": \"fullstackwebdev@careerfoundry.com\",\n    \"self\": true\n   },\n   \"start\": {\n    \"dateTime\": \"2020-05-22T14:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"end\": {\n    \"dateTime\": \"2020-05-22T15:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n   \"originalStartTime\": {\n    \"dateTime\": \"2020-05-22T14:00:00+02:00\",\n    \"timeZone\": \"Europe/Berlin\"\n   },\n   \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n   \"sequence\": 0,\n   \"reminders\": {\n    \"useDefault\": true\n   },\n   \"eventType\": \"default\"\n  }\n]\n\nJSON.parse(JSON.stringify(mockData))\n\nexport {mockData}\n","import { mockData } from './mock-data'\n\nexport const getEvents = async () => {\n  return mockData\n}\n\n\nexport const extractLocations = (events) => {\n  var extractLocations = events.map((event) => event.location)\n  var locations = [...new Set(extractLocations)]\n  return locations\n}\n","import React, { Component } from 'react';\nimport EventList from './EventList'\nimport CitySearch from './CitySearch'\nimport NumberOfEvents from './NumberOfEvents'\nimport { getEvents, extractLocations } from './api';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: []\n  }\n\n  componentDidMount() {\n  this.mounted = true;\n  getEvents().then((events) => {\n    if (this.mounted) {\n      this.setState({ events, locations: extractLocations(events) });\n    }\n  });\n}\n\ncomponentWillUnmount(){\n  this.mounted = false;\n}\n\n  updateEvents = (location) => {\n  getEvents().then((events) => {\n    const locationEvents = (location === 'all') ?\n      events :\n      events.filter((event) => event.location === location)\n    this.setState({\n      events: locationEvents\n    })\n  })\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n      <EventList events={this.state.events} />\n      <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n      <NumberOfEvents />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}